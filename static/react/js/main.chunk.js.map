{"version":3,"sources":["OpenSeadragonComponent.js","../public/openseadragon-bin-2.4.0/OpenSeadragonLoader.js","../public/openseadragon-bin-2.4.0/viaWebGL.js","../public/openseadragon-bin-2.4.0/openSeadragonGL.js","../public/openseadragon-bin-2.4.0/openseadragon-svg-overlay.js","../public/openseadragon-bin-2.4.0/openseadragon-filtering.js","../public/openseadragon-bin-2.4.0/canvas-overlay-hd.js","../public/openseadragon-bin-2.4.0/openseadragonrgb.js","App.js","index.js"],"names":["OpenSeadragonComponent","props","state","options","id","prefixUrl","tileSources","tileSource","Image","xmlns","Url","Format","Overlap","TileSize","Size","Height","Width","width","y","x","this","initialiseWidgets","viewer","global","OpenSeadragon","CanvasOverlayHd","onRedraw","opts","context","fillStyle","beginPath","arc","Math","PI","fill","Component","window","ViaWebGL","incoming","e","ready","gl","maker","key","flat","document","createElement","getContext","tile_size","vShader","fShader","wrap","CLAMP_TO_EDGE","tile_pos","filter","NEAREST","pos","height","on","prototype","init","source","hasOwnProperty","container","onclick","bind","toCanvas","canvas","viewport","step","map","getter","push","toProgram","toBuffers","Promise","all","then","a","where","done","slice","bid","XMLHttpRequest","open","onerror","onload","status","response","send","files","program","createProgram","ok","kind","value","sh","console","log","given","i","shader","createShader","shaderSource","compileShader","attachShader","linkProgram","useProgram","call","boxes","buffer","Float32Array","concat","apply","bytes","BYTES_PER_ELEMENT","getUniformLocation","uniform2f","att","name","number","index","min","length","vec","floor","getAttribLocation","FLOAT","tex","texParameteri","TEXTURE_2D","TEXTURE_WRAP_T","TEXTURE_WRAP_S","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","bindTexture","createTexture","drawArrays","TRIANGLE_STRIP","pixelStorei","UNPACK_FLIP_Y_WEBGL","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","tile","nodeName","drawImage","enableVertexAttribArray","vertexAttribPointer","activeTexture","TEXTURE0","output","appendChild","toggle","innerHTML","openSeadragonGL","openSD","interface","viaGL","image","getCompletionCallback","src","toDataURL","input","rendered","defaults","callback","loaded","forceinit","merger","addHandler","world","custom","tilesource","getTileWidth","getTileHeight","and","adder","handler","obj","Object","keys","button","terms","prefix","onClick","shade","srcRest","srcHover","srcDown","srcGroup","clearControls","buttons","Button","toolbar","ButtonGroup","addControl","element","anchor","ControlAnchor","TOP_LEFT","resetItems","$","require","Error","svgNS","Viewer","svgOverlay","_svgOverlayInfo","Overlay","self","_viewer","_containerWidth","_containerHeight","_svg","createElementNS","style","position","left","top","_node","resize","evt","node","clientWidth","setAttribute","clientHeight","p","pixelFromPoint","Point","zoom","getZoom","rotation","getRotation","scale","_containerInnerSize","MouseTracker","clickHandler","setTracking","onDrag","dragHandler","event","version","major","minor","setOptions","instance","filters","isArray","processors","filterIncrement","loadMode","forceRedraw","itemsToReset","items","getAllItems","j","addItemToReset","reset","item","indexOf","result","getItemCount","getItemAt","getFiltersProcessors","globalProcessors","setFilterOptions","filterPluginInstance","FilterPlugin","forceRefilter","applyFilters","filtersProcessors","currentIncrement","callbacks","tiledImage","undefined","_renderedContext","_filterIncrement","_originalImageData","putImageData","getImageData","imgData","Filters","THRESHOLDING","threshold","pixels","data","v","BRIGHTNESS","adjustment","precomputedBrightness","CONTRAST","precomputedContrast","GAMMA","precomputedGamma","pow","GREYSCALE","val","INVERT","precomputedInvert","MORPHOLOGICAL_OPERATION","kernelSize","comparator","kernelHalfSize","offset","originalPixels","r","g","b","pixelX","pixelY","CONVOLUTION","kernel","sqrt","weight","module","exports","backingScale","_canvasdiv","_canvas","clearBeforeRedraw","_updateCanvas","clearRect","devicePixelRatio","backingScaleUpdated","viewportZoom","clear","count","viewportToImageZoom","vp","imageToViewportCoordinates","translate","setTransform","webPoint","viewportPos","pointFromPixel","viewportPosRect","Rect","tileSourcePos","_viewportToTiledImageRectangle","getTopLeft","aspectRatio","factory","t","onCanvasHover","getValueAt","rgb","rgbInstance","RGB","n","extend","tracker","moveHandler","delegate","ControlDock","arguments","o","drawer","getRgbAt","s","getContentSize","TiledImage","viewerElementToImageCoordinates","imageCoordinates","Drawer","useCanvas","pixelDensityRatio","_getContext","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"iOAWqBA,G,iGACjB,WAAYC,GAAQ,IAAD,6BACf,cAAMA,IAcDC,MAAQ,CACTC,QAAS,CACLC,GAAI,SACJC,UAAW,yEACXC,YAAa,CAAC,CACVC,WAAY,CACRC,MAAO,CACHC,MAAO,6CACPC,IAAK,2EACLC,OAAQ,MACRC,QAAS,IACTC,SAAU,MACVC,KAAM,CACFC,OAAQ,OACRC,MAAO,UAInBC,MAAO,EACPC,EAAG,GACHC,EAAG,OAnCA,E,gEA0CfC,KAAKC,sB,2CAILD,KAAKC,sB,0CAKLD,KAAKE,OAASC,EAAOC,cAAcJ,KAAKlB,MAAMC,SAC9B,IAAIoB,EAAOC,cAAcC,gBAAgBL,KAAKE,OAAQ,CAClEI,SAAU,SAAUC,GAChB,IAAMC,EAAUD,EAAKC,QACrBA,EAAQC,UAAY,UACpBD,EAAQE,YACRF,EAAQG,IAAI,IAAK,IAAK,IAAK,EAAa,EAAVC,KAAKC,IAAQ,GAC3CL,EAAQM,Y,+BAOhB,OACI,yBAAK9B,GAAIgB,KAAKlB,MAAMC,QAAQC,S,GAnEY+B,gB,wFCXpD,gCACAZ,EAAOC,cAAgBY,OAAOZ,cAAgBA,M,+BCK9Ca,SAAW,SAASC,GAIhBlB,KAAK,cAAgB,SAASmB,GAAK,OAAOA,GAC1CnB,KAAK,aAAe,SAASmB,GAAK,OAAOA,GACzCnB,KAAKoB,MAAQ,SAASD,GAAK,OAAOA,GAElC,IAAIE,EAAKrB,KAAKsB,QAcd,IAAK,IAAIC,KAbTvB,KAAKwB,KAAOC,SAASC,cAAc,UAAUC,WAAW,MACxD3B,KAAK4B,UAAY,cACjB5B,KAAK6B,QAAU,eACf7B,KAAK8B,QAAU,eACf9B,KAAK+B,KAAOV,EAAGW,cACfhC,KAAKiC,SAAW,aAChBjC,KAAKkC,OAASb,EAAGc,QACjBnC,KAAKoC,IAAM,QACXpC,KAAKqC,OAAS,IACdrC,KAAKH,MAAQ,IACbG,KAAKsC,GAAK,EACVtC,KAAKqB,GAAKA,EAEMH,EACZlB,KAAKuB,GAAOL,EAASK,IAI7BN,SAASsB,UAAY,CAEjBC,KAAM,SAASC,GACCzC,KAAKoB,MAEbpB,KAAK0C,eAAe,cAAgB1C,KAAK0C,eAAe,aACxD1C,KAAK2C,UAAUC,QAAU5C,KAAKA,KAAK4C,SAASC,KAAK7C,OAEjDyC,GAAUA,EAAOJ,QAAUI,EAAO5C,QAClCG,KAAKoB,MAAQpB,KAAK8C,SAASD,KAAK7C,KAAKyC,GACrCzC,KAAKqC,OAASI,EAAOJ,OACrBrC,KAAKH,MAAQ4C,EAAO5C,OAExBG,KAAKyC,OAASA,EACdzC,KAAKqB,GAAG0B,OAAOlD,MAAQG,KAAKH,MAC5BG,KAAKqB,GAAG0B,OAAOV,OAASrC,KAAKqC,OAC7BrC,KAAKqB,GAAG2B,SAAS,EAAG,EAAGhD,KAAKH,MAAOG,KAAKqC,QAExC,IAAIY,EAAO,CAAC,CAACjD,KAAK6B,QAAS7B,KAAK8B,SAASoB,IAAIlD,KAAKmD,SAElD,OADAF,EAAKG,KAAKpD,KAAKqD,UAAUR,KAAK7C,MAAOA,KAAKsD,UAAUT,KAAK7C,OAClDuD,QAAQC,IAAIP,EAAK,IAAIQ,KAAKR,EAAK,IAAIQ,KAAKR,EAAK,IAAIQ,KAAKzD,KAAKoB,QAItEE,MAAO,SAASvC,GACZ,OAAOiB,KAAKQ,QAAQiB,SAASC,cAAc,YAE/ClB,QAAS,SAASkD,GACd,OAAOA,EAAE/B,WAAW,uBAAyB+B,EAAE/B,WAAW,UAG9DwB,OAAQ,SAASQ,GACb,OAAO,IAAIJ,SAAQ,SAASK,GAExB,GAAuB,QAAnBD,EAAME,OAAO,GACb,OAAOD,EAAKD,GAEhB,IAAIG,EAAM,IAAIC,eAOdD,EAAIE,KAAK,MAAOL,GAAO,GACvBG,EAAIG,QAAUH,EAAII,OAPR,WACN,OAAkB,KAAdJ,EAAIK,OACGP,EAAKE,EAAIM,UAEbR,EAAKD,IAIhBG,EAAIO,WAIZhB,UAAW,SAASiB,GAChB,IAAIjD,EAAKrB,KAAKqB,GACVkD,EAAUlD,EAAGmD,gBACbC,EAAK,SAASC,EAAKP,EAAOQ,EAAMC,GAIhC,OAHKvD,EAAG,MAAMqD,EAAK,aAAaC,EAAOtD,EAAG8C,EAAO,aAC7CU,QAAQC,KAAKF,GAAI,QAAQ,MAAMvD,EAAG,MAAMqD,EAAK,WAAWC,IAErDA,GAYX,OATAL,EAAMpB,KAAI,SAAS6B,EAAMC,GACrB,IAAIJ,EAAK,CAAC,gBAAiB,mBAAmBI,GAC1CC,EAAS5D,EAAG6D,aAAa7D,EAAGuD,IAChCvD,EAAG8D,aAAaF,EAAQF,GACxB1D,EAAG+D,cAAcH,GACjB5D,EAAGgE,aAAad,EAASU,GACzBR,EAAG,SAAS,UAAUQ,EAAOL,MAEjCvD,EAAGiE,YAAYf,GACRE,EAAG,UAAU,OAAOF,IAG/BjB,UAAW,SAASiB,GAGhBvE,KAAKqB,GAAGkE,WAAWhB,GACnBvE,KAAK,aAAawF,KAAKxF,KAAMuE,GAG7B,IAAIkB,EAAQ,CAAC,EAAE,EAAG,GAAG,GAAG,EAAG,EAAG,EAAG,GAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1DC,EAAS,IAAIC,aAAa,GAAGC,OAAOC,MAAM,GAAIJ,IAC9CK,EAAQJ,EAAOK,kBACf1E,EAAKrB,KAAKqB,GAIVO,EAAYP,EAAG2E,mBAAmBzB,EAASvE,KAAK4B,WACpDP,EAAG4E,UAAUrE,EAAWP,EAAG0B,OAAOV,OAAQhB,EAAG0B,OAAOlD,OAGpDG,KAAKkG,IAAM,CAAClG,KAAKoC,IAAKpC,KAAKiC,UAAUiB,KAAI,SAASiD,EAAMC,GAEpD,IAAIC,EAAQzF,KAAK0F,IAAIF,EAAQX,EAAMc,OAAO,GACtCC,EAAM5F,KAAK6F,MAAMhB,EAAMY,GAAOE,OAV1B,GAaR,MAAO,CAFMlF,EAAGqF,kBAAkBnC,EAAS4B,GAE3BK,EAAKnF,EAAGsF,MAAO,EAAGH,EAAIV,EAb9B,EAa2CO,EAAMG,EAAIV,MAGjE9F,KAAK4G,IAAM,CACPC,cAAe,CACX,CAACxF,EAAGyF,WAAYzF,EAAG0F,eAAgB/G,KAAK+B,MACxC,CAACV,EAAGyF,WAAYzF,EAAG2F,eAAgBhH,KAAK+B,MACxC,CAACV,EAAGyF,WAAYzF,EAAG4F,mBAAoBjH,KAAKkC,QAC5C,CAACb,EAAGyF,WAAYzF,EAAG6F,mBAAoBlH,KAAKkC,SAEhDiF,WAAY,CAAC9F,EAAGyF,WAAY,EAAGzF,EAAG+F,KAAM/F,EAAG+F,KAAM/F,EAAGgG,eACpDC,YAAa,CAACjG,EAAGyF,WAAYzF,EAAGkG,iBAChCC,WAAY,CAACnG,EAAGoG,eAAgB,EAzBxB,GA0BRC,YAAa,CAACrG,EAAGsG,oBAAqB,IAG1CtG,EAAGuG,WAAWvG,EAAGwG,aAAcxG,EAAGyG,gBAClCzG,EAAG0G,WAAW1G,EAAGwG,aAAcnC,EAAQrE,EAAG2G,cAG9ClF,SAAU,SAASmF,GAEf,GAAIjI,KAAKsC,GAAG,IAAM,EACd,MAAoB,OAAjB2F,EAAKC,UACJlI,KAAKwB,KAAKuB,OAAOlD,MAAQoI,EAAKpI,MAC9BG,KAAKwB,KAAKuB,OAAOV,OAAS4F,EAAK5F,OAC/BrC,KAAKwB,KAAK2G,UAAUF,EAAK,EAAE,EAAEA,EAAKpI,MAAMoI,EAAK5F,QACtCrC,KAAKwB,KAAKuB,QAEdkF,EAIXjI,KAAK,cAAcwF,KAAKxF,KAAKiI,GAC7B,IAAI5G,EAAKrB,KAAKqB,GAGdrB,KAAKkG,IAAIhD,KAAI,SAASnD,GAElBsB,EAAG+G,wBAAwBrI,EAAE8D,MAAM,EAAE,IACrCxC,EAAGgH,oBAAoBxC,MAAMxE,EAAItB,MAIrCsB,EAAGiH,cAAcjH,EAAGkH,UACpBlH,EAAGiG,YAAYzB,MAAMxE,EAAIrB,KAAK4G,IAAIU,aAClCjG,EAAGqG,YAAY7B,MAAMxE,EAAIrB,KAAK4G,IAAIc,aAGlC1H,KAAK4G,IAAIC,cAAc3D,KAAI,SAASnD,GAChCsB,EAAGwF,cAAchB,MAAMxE,EAAItB,MAG/B,IAAIyI,EAASxI,KAAK4G,IAAIO,WAAWvB,OAAO,CAACqC,IAUzC,OATA5G,EAAG8F,WAAWtB,MAAMxE,EAAImH,GAGxBnH,EAAGmG,WAAW3B,MAAMxE,EAAIrB,KAAK4G,IAAIY,YAG7BxH,KAAK2C,WACL3C,KAAK2C,UAAU8F,YAAYzI,KAAKqB,GAAG0B,QAEhC/C,KAAKqB,GAAG0B,QAEnB2F,OAAQ,WACJ1I,KAAKsC,KACLtC,KAAK2C,UAAUgG,UAAY,GAC3B3I,KAAK2C,UAAU8F,YAAYzI,KAAK8C,SAAS9C,KAAKyC,Y,4BClMtDmG,gBAAkB,SAASC,GAIvB7I,KAAK8I,UAAY,CACb,cAAe,SAAS3H,GAEpB,IAAIqH,EAASxI,KAAK+I,MAAMjG,SAAS3B,EAAE6H,OACnC7H,EAAE6H,MAAM9E,OAAS/C,EAAE8H,wBACnB9H,EAAE6H,MAAME,IAAMV,EAAOW,aAEzB,eAAgB,SAAShI,GAErB,IAAIiI,EAAQjI,EAAEkI,SAAStG,OACvB5B,EAAEkI,SAASlB,UAAUnI,KAAK+I,MAAMjG,SAASsG,GAAQ,EAAG,EAAGA,EAAMvJ,MAAOuJ,EAAM/G,UAGlFrC,KAAKsJ,SAAW,CACZ,cAAe,SAASC,EAAUpI,GAC9BoI,EAASpI,IAEb,eAAgB,SAASoI,EAAUpI,GACV,IAAjBA,EAAE8G,KAAKuB,SACPrI,EAAE8G,KAAKuB,OAAS,EAChBD,EAASpI,MAIrBnB,KAAK6I,OAASA,EACd7I,KAAK+I,MAAQ,IAAI9H,UAGrB2H,gBAAgBrG,UAAY,CAIxBkH,UAAW,WAGP,OAFWzJ,KAAK0J,OAAO7G,KAAK7C,KAC5BgE,GACOhE,MAEXwC,KAAM,WACF,IAAIwB,EAAOhE,KAAK0J,OAAO7G,KAAK7C,MAM5B,OALAA,KAAK6I,OAAOc,WAAW,OAAO3F,GAG9BhE,KAAK6I,OAAOe,MAAMD,WAAW,WAAW3F,GAEjChE,MAGX2J,WAAY,SAASpI,EAAIsI,GACjBtI,KAAOvB,KAAKsJ,WACZtJ,KAAKuB,GAAOvB,KAAKsJ,SAAS/H,IAET,mBAAVsI,IACP7J,KAAKuB,GAAOsI,IAIpBH,OAAQ,SAASvI,GAIb,IAAI2I,EAAa9J,KAAK6I,OAAOpG,OAG7BzC,KAAKH,MAAQiK,EAAWC,eACxB/J,KAAKqC,OAASyH,EAAWE,gBART,UAUAhK,KAAKiK,IAAIjK,KAAK+I,QAVd,IAUhB,2BAAsC,KAA7BxH,EAA6B,QAClCvB,KAAK+I,MAAMxH,GAAOvB,KAAKuB,IAXX,8BAahBvB,KAAK+I,MAAMvG,OAAOiB,KAAKzD,KAAKkK,MAAMrH,KAAK7C,QAG3CkK,MAAO,SAAS/I,GAAG,UACCnB,KAAKiK,IAAIjK,KAAKsJ,WADf,IACf,2BAAyC,KAAhC/H,EAAgC,QACjC4I,EAAUnK,KAAKuB,GAAKsB,KAAK7C,MACzB8I,EAAY9I,KAAK8I,UAAUvH,GAAKsB,KAAK7C,MAEzCA,KAAK6I,OAAOc,WAAWpI,GAAK,SAASJ,GACjCgJ,EAAQ3E,KAAKxF,KAAM8I,EAAW3H,OANvB,gCAWnB8I,IAAK,SAASG,GACZ,OAAOC,OAAOC,KAAKF,GAAKlI,OAAOmI,OAAO3H,eAAe1C,OAGvDuK,OAAQ,SAASC,GAEb,IAAIrE,EAAOqE,EAAMrE,MAAQ,OACrBsE,EAASD,EAAMC,QAAUzK,KAAK6I,OAAO5J,UACpCuL,EAAM9H,eAAe,aACtB8H,EAAME,QAAU1K,KAAK2K,OAEzBH,EAAME,QAAUF,EAAME,QAAQ7H,KAAK7C,MACnCwK,EAAMI,QAAUJ,EAAMI,SAAWH,EAAOtE,EAAK,YAC7CqE,EAAMK,SAAWL,EAAMK,UAAYJ,EAAOtE,EAAK,aAC/CqE,EAAMM,QAAUN,EAAMM,SAAWL,EAAOtE,EAAK,eAC7CqE,EAAMO,SAAWP,EAAMO,UAAYN,EAAOtE,EAAK,kBAE/CnG,KAAK6I,OAAOmC,gBAAgBC,QAAQA,QAAQ7H,KAAK,IAAIhD,cAAc8K,OAAOV,IAC1E,IAAIW,EAAU,IAAI/K,cAAcgL,YAAY,CAACH,QAASjL,KAAK6I,OAAOoC,QAAQA,UAC1EjL,KAAK6I,OAAOwC,WAAWF,EAAQG,QAAQ,CAACC,OAAQnL,cAAcoL,cAAcC,YAGhFd,MAAO,WAEH3K,KAAK+I,MAAMzG,KACXtC,KAAK6I,OAAOe,MAAM8B,gB,oBCjH1B,WAEI,IAAIC,EAAI3K,OAAOZ,cAEf,IAAKuL,KACDA,EAAIC,EAAQ,IAER,MAAM,IAAIC,MAAM,6BAIxB,IAAIC,EAAQ,6BAGZH,EAAEI,OAAOxJ,UAAUyJ,WAAa,WAC5B,OAAIhM,KAAKiM,kBAITjM,KAAKiM,gBAAkB,IAAIC,EAAQlM,OAHxBA,KAAKiM,iBAQpB,IAAIC,EAAU,SAAShM,GACnB,IAAIiM,EAAOnM,KAEXA,KAAKoM,QAAUlM,EACfF,KAAKqM,gBAAkB,EACvBrM,KAAKsM,iBAAmB,EAExBtM,KAAKuM,KAAO9K,SAAS+K,gBAAgBV,EAAO,OAC5C9L,KAAKuM,KAAKvN,GAAK,aACfgB,KAAKuM,KAAKE,MAAMC,SAAW,WAC3B1M,KAAKuM,KAAKE,MAAME,KAAO,EACvB3M,KAAKuM,KAAKE,MAAMG,IAAM,EACtB5M,KAAKuM,KAAKE,MAAM5M,MAAQ,OACxBG,KAAKuM,KAAKE,MAAMpK,OAAS,OACzBrC,KAAKoM,QAAQrJ,OAAO0F,YAAYzI,KAAKuM,MAErCvM,KAAK6M,MAAQpL,SAAS+K,gBAAgBV,EAAO,KAC7C9L,KAAKuM,KAAK9D,YAAYzI,KAAK6M,OAE3B7M,KAAKoM,QAAQzC,WAAW,aAAa,WACjCwC,EAAKW,YAGT9M,KAAKoM,QAAQzC,WAAW,QAAQ,WAC5BwC,EAAKW,YAGT9M,KAAKoM,QAAQzC,WAAW,UAAU,SAASoD,GACvCZ,EAAKW,YAGT9M,KAAKoM,QAAQzC,WAAW,UAAU,WAC9BwC,EAAKW,YAGT9M,KAAK8M,UAITZ,EAAQ3J,UAAY,CAEhByK,KAAM,WACF,OAAOhN,KAAK6M,OAIhBC,OAAQ,WACA9M,KAAKqM,kBAAoBrM,KAAKoM,QAAQzJ,UAAUsK,cAChDjN,KAAKqM,gBAAkBrM,KAAKoM,QAAQzJ,UAAUsK,YAC9CjN,KAAKuM,KAAKW,aAAa,QAASlN,KAAKqM,kBAGrCrM,KAAKsM,mBAAqBtM,KAAKoM,QAAQzJ,UAAUwK,eACjDnN,KAAKsM,iBAAmBtM,KAAKoM,QAAQzJ,UAAUwK,aAC/CnN,KAAKuM,KAAKW,aAAa,SAAUlN,KAAKsM,mBAG1C,IAAIc,EAAIpN,KAAKoM,QAAQpJ,SAASqK,eAAe,IAAI1B,EAAE2B,MAAM,EAAG,IAAI,GAC5DC,EAAOvN,KAAKoM,QAAQpJ,SAASwK,SAAQ,GACrCC,EAAWzN,KAAKoM,QAAQpJ,SAAS0K,cAEjCC,EAAQ3N,KAAKoM,QAAQpJ,SAAS4K,oBAAoB7N,EAAIwN,EAC1DvN,KAAK6M,MAAMK,aAAa,YACpB,aAAeE,EAAErN,EAAI,IAAMqN,EAAEtN,EAAI,WAAa6N,EAAQ,YAAcF,EAAW,MAIvF/C,QAAS,SAASsC,EAAM7C,GAGpB,IAAIwB,EAAEkC,aAAa,CACfvC,QAAS0B,EACTc,aAAc3D,IACf4D,aAAY,IAInBC,OAAQ,SAAShB,EAAM7C,GACrB,IAAIwB,EAAEkC,aAAa,CACjBvC,QAAS0B,EACTiB,YAAa,SAASC,OAGrBH,aAAY,KA3GzB,I,iBCcC,WAEG,aAEA,IAAIpC,EAAI3K,OAAOZ,cACf,IAAKuL,KACDA,EAAIC,EAAQ,IAER,MAAM,IAAIC,MAAM,6BAIxB,IAAKF,EAAEwC,SAAWxC,EAAEwC,QAAQC,MAAQ,GACZ,IAApBzC,EAAEwC,QAAQC,OAAezC,EAAEwC,QAAQE,MAAQ,EAC3C,MAAM,IAAIxC,MACN,0DAwJR,SAASyC,EAAWC,EAAUxP,GAE1B,IAAIyP,GADJzP,EAAUA,GAAW,IACCyP,QACtBD,EAASC,QAAWA,EAChB7C,EAAE8C,QAAQD,GAAWA,EAAU,CAACA,GADN,GAE9B,IAAK,IAAIxJ,EAAI,EAAGA,EAAIuJ,EAASC,QAAQjI,OAAQvB,IAAK,CAE9C,KADI9C,EAASqM,EAASC,QAAQxJ,IAClB0J,WACR,MAAM,IAAI7C,MAAM,wCAEpB3J,EAAOwM,WAAa/C,EAAE8C,QAAQvM,EAAOwM,YACjCxM,EAAOwM,WAAa,CAACxM,EAAOwM,YAIpC,GAFAH,EAASI,kBAEgB,SAArB5P,EAAQ6P,SACRL,EAASrO,OAAO2O,kBACb,CACH,IAAIC,EAAe,GACnB,IAAS9J,EAAI,EAAGA,EAAIuJ,EAASC,QAAQjI,OAAQvB,IAAK,CAC9C,IAAI9C,EACJ,KADIA,EAASqM,EAASC,QAAQxJ,IAClB+J,MAAO,CACfD,EAAeE,EAAYT,EAASrO,OAAO0J,OAC3C,MAEJ,GAAI+B,EAAE8C,QAAQvM,EAAO6M,OACjB,IAAK,IAAIE,EAAI,EAAGA,EAAI/M,EAAO6M,MAAMxI,OAAQ0I,IACrCC,EAAehN,EAAO6M,MAAME,GAAIH,QAGpCI,EAAehN,EAAO6M,MAAOD,GAGrC,IAAS9J,EAAI,EAAGA,EAAI8J,EAAavI,OAAQvB,IACrC8J,EAAa9J,GAAGmK,SAK5B,SAASD,EAAeE,EAAMN,GAC1B,GAAIA,EAAaO,QAAQD,IAAS,EAC9B,MAAM,IAAIvD,MAAM,yDAGpBiD,EAAa1L,KAAKgM,GAGtB,SAASJ,EAAYpF,GAEjB,IADA,IAAI0F,EAAS,GACJtK,EAAI,EAAGA,EAAI4E,EAAM2F,eAAgBvK,IACtCsK,EAAOlM,KAAKwG,EAAM4F,UAAUxK,IAEhC,OAAOsK,EAGX,SAASG,EAAqBlB,EAAUa,GACpC,GAAgC,IAA5Bb,EAASC,QAAQjI,OACjB,MAAO,GAIX,IADA,IAAImJ,EAAmB,KACd1K,EAAI,EAAGA,EAAIuJ,EAASC,QAAQjI,OAAQvB,IAAK,CAC9C,IAAI9C,EAASqM,EAASC,QAAQxJ,GAC9B,GAAK9C,EAAO6M,OAEL,GAAI7M,EAAO6M,QAAUK,GACxBzD,EAAE8C,QAAQvM,EAAO6M,QAAU7M,EAAO6M,MAAMM,QAAQD,IAAS,EACzD,OAAOlN,EAAOwM,gBAHdgB,EAAmBxN,EAAOwM,WAMlC,OAAOgB,GAAsC,GA3NjD/D,EAAEI,OAAOxJ,UAAUoN,iBAAmB,SAAS5Q,GACtCiB,KAAK4P,qBAKNtB,EAAWtO,KAAK4P,qBAAsB7Q,KAJtCA,EAAUA,GAAW,IACbmB,OAASF,KACjBA,KAAK4P,qBAAuB,IAAIjE,EAAEkE,aAAa9Q,KAOvD4M,EAAEI,OAAOxJ,UAAUuN,cAAgB,WAC3B9P,KAAK4P,sBACL5P,KAAK4P,qBAAqBjB,mBAmBlChD,EAAEkE,aAAe,SAAS9Q,GAEtB,KADAA,EAAUA,GAAW,IACRmB,OACT,MAAM,IAAI2L,MAAM,+BAEpB,IAAIM,EAAOnM,KAkCX,SAAS+P,EAAavP,EAASwP,EAAmB/H,EAAMsB,GACpD,GAAIA,EAAU,CAGV,IAFA,IAAI0G,EAAmB9D,EAAKwC,gBACxBuB,EAAY,GACPlL,EAAI,EAAGA,EAAIgL,EAAkBzJ,OAAS,EAAGvB,KAC9C,SAAUA,GACNkL,EAAUlL,GAAK,WAGPmH,EAAKwC,kBAAoBsB,GAG7BD,EAAkBhL,EAAI,GAAGxE,EAAS0P,EAAUlL,EAAI,GAAGiD,IAP3D,CASGjD,GAEPkL,EAAUF,EAAkBzJ,OAAS,GAAK,WAGlC4F,EAAKwC,kBAAoBsB,GAG7B1G,KAEJyG,EAAkB,GAAGxP,EAAS0P,EAAU,GAAGjI,QAE3C,IAASjD,EAAI,EAAGA,EAAIgL,EAAkBzJ,OAAQvB,IAC1CgL,EAAkBhL,GAAGxE,GAAS,cAC3ByH,GA7DfjI,KAAKE,OAASnB,EAAQmB,OAEtBF,KAAKE,OAAOyJ,WAAW,eAUvB,SAA2BuE,GACvB,IAAIQ,EAAae,EAAqBtD,EAAM+B,EAAMiC,YAClD,GAA0B,IAAtBzB,EAAWnI,OACX,OAEJ,IAAI0B,EAAOiG,EAAMjG,KACbe,EAAQkF,EAAMlF,MAClB,GAAc,OAAVA,QAA4BoH,IAAVpH,EAAqB,CACvC,IAAIjG,EAAS/B,OAAOS,SAASC,cAAc,UAC3CqB,EAAOlD,MAAQmJ,EAAMnJ,MACrBkD,EAAOV,OAAS2G,EAAM3G,OACtB,IAAI7B,EAAUuC,EAAOpB,WAAW,MAChCnB,EAAQ2H,UAAUa,EAAO,EAAG,GAC5Bf,EAAKoI,iBAAmB7P,EACxB,IAAI+I,EAAW2E,EAAMjF,wBACrB8G,EAAavP,EAASkO,EAAYzG,EAAMsB,GACxCtB,EAAKqI,iBAAmBnE,EAAKwC,oBAzBrC3O,KAAKE,OAAOyJ,WAAW,gBA+DvB,SAA4BuE,GACxB,IAAIjG,EAAOiG,EAAMjG,KACboB,EAAW6E,EAAM7E,SACrB,GAAIA,EAASiH,mBAAqBnE,EAAKwC,gBACnC,OAEJ,IAAID,EAAae,EAAqBtD,EAAM+B,EAAMiC,YAClD,GAA0B,IAAtBzB,EAAWnI,OAOX,OANI8C,EAASkH,qBAETlH,EAASmH,aAAanH,EAASkH,mBAAoB,EAAG,UAC/ClH,EAASkH,yBAEpBlH,EAASiH,iBAAmBnE,EAAKwC,iBAIjCtF,EAASkH,mBAGTlH,EAASmH,aAAanH,EAASkH,mBAAoB,EAAG,GAEtDlH,EAASkH,mBAAqBlH,EAASoH,aACnC,EAAG,EAAGpH,EAAStG,OAAOlD,MAAOwJ,EAAStG,OAAOV,QAGrD,GAAI4F,EAAKoI,iBAAkB,CACvB,GAAIpI,EAAKqI,mBAAqBnE,EAAKwC,gBAAiB,CAChD,IAAI+B,EAAUzI,EAAKoI,iBAAiBI,aAAa,EAAG,EAChDxI,EAAKoI,iBAAiBtN,OAAOlD,MAC7BoI,EAAKoI,iBAAiBtN,OAAOV,QAKjC,OAJAgH,EAASmH,aAAaE,EAAS,EAAG,UAC3BzI,EAAKoI,wBACLpI,EAAKqI,sBACZjH,EAASiH,iBAAmBnE,EAAKwC,wBAG9B1G,EAAKoI,wBACLpI,EAAKqI,iBAEhBP,EAAa1G,EAAUqF,EAAWzG,GAClCoB,EAASiH,iBAAmBnE,EAAKwC,mBApGrC3O,KAAK2O,gBAAkB,EAEvBL,EAAWtO,KAAMjB,IA+KrB4M,EAAEgF,QAAU,CACRC,aAAc,SAASC,GACnB,GAAIA,EAAY,GAAKA,EAAY,IAC7B,MAAM,IAAIhF,MAAM,wCAEpB,OAAO,SAASrL,EAAS+I,GAIrB,IAHA,IAAImH,EAAUlQ,EAAQiQ,aAClB,EAAG,EAAGjQ,EAAQuC,OAAOlD,MAAOW,EAAQuC,OAAOV,QAC3CyO,EAASJ,EAAQK,KACZ/L,EAAI,EAAGA,EAAI8L,EAAOvK,OAAQvB,GAAK,EAAG,CACvC,IAGIgM,GAHIF,EAAO9L,GACP8L,EAAO9L,EAAI,GACX8L,EAAO9L,EAAI,IACG,EACtB8L,EAAO9L,GAAK8L,EAAO9L,EAAI,GAAK8L,EAAO9L,EAAI,GACnCgM,EAAIH,EAAY,EAAI,IAE5BrQ,EAAQgQ,aAAaE,EAAS,EAAG,GACjCnH,MAGR0H,WAAY,SAASC,GACjB,GAAIA,GAAc,KAAOA,EAAa,IAClC,MAAM,IAAIrF,MACN,uDAGR,IADA,IAAIsF,EAAwB,GACnBnM,EAAI,EAAGA,EAAI,IAAKA,IACrBmM,EAAsBnM,GAAKA,EAAIkM,EAEnC,OAAO,SAAS1Q,EAAS+I,GAIrB,IAHA,IAAImH,EAAUlQ,EAAQiQ,aAClB,EAAG,EAAGjQ,EAAQuC,OAAOlD,MAAOW,EAAQuC,OAAOV,QAC3CyO,EAASJ,EAAQK,KACZ/L,EAAI,EAAGA,EAAI8L,EAAOvK,OAAQvB,GAAK,EACpC8L,EAAO9L,GAAKmM,EAAsBL,EAAO9L,IACzC8L,EAAO9L,EAAI,GAAKmM,EAAsBL,EAAO9L,EAAI,IACjD8L,EAAO9L,EAAI,GAAKmM,EAAsBL,EAAO9L,EAAI,IAErDxE,EAAQgQ,aAAaE,EAAS,EAAG,GACjCnH,MAGR6H,SAAU,SAASF,GACf,GAAIA,EAAa,EACb,MAAM,IAAIrF,MAAM,yCAGpB,IADA,IAAIwF,EAAsB,GACjBrM,EAAI,EAAGA,EAAI,IAAKA,IACrBqM,EAAoBrM,GAAKA,EAAIkM,EAEjC,OAAO,SAAS1Q,EAAS+I,GAIrB,IAHA,IAAImH,EAAUlQ,EAAQiQ,aAClB,EAAG,EAAGjQ,EAAQuC,OAAOlD,MAAOW,EAAQuC,OAAOV,QAC3CyO,EAASJ,EAAQK,KACZ/L,EAAI,EAAGA,EAAI8L,EAAOvK,OAAQvB,GAAK,EACpC8L,EAAO9L,GAAKqM,EAAoBP,EAAO9L,IACvC8L,EAAO9L,EAAI,GAAKqM,EAAoBP,EAAO9L,EAAI,IAC/C8L,EAAO9L,EAAI,GAAKqM,EAAoBP,EAAO9L,EAAI,IAEnDxE,EAAQgQ,aAAaE,EAAS,EAAG,GACjCnH,MAGR+H,MAAO,SAASJ,GACZ,GAAIA,EAAa,EACb,MAAM,IAAIrF,MAAM,sCAGpB,IADA,IAAI0F,EAAmB,GACdvM,EAAI,EAAGA,EAAI,IAAKA,IACrBuM,EAAiBvM,GAAqC,IAAhCpE,KAAK4Q,IAAIxM,EAAI,IAAKkM,GAE5C,OAAO,SAAS1Q,EAAS+I,GAIrB,IAHA,IAAImH,EAAUlQ,EAAQiQ,aAClB,EAAG,EAAGjQ,EAAQuC,OAAOlD,MAAOW,EAAQuC,OAAOV,QAC3CyO,EAASJ,EAAQK,KACZ/L,EAAI,EAAGA,EAAI8L,EAAOvK,OAAQvB,GAAK,EACpC8L,EAAO9L,GAAKuM,EAAiBT,EAAO9L,IACpC8L,EAAO9L,EAAI,GAAKuM,EAAiBT,EAAO9L,EAAI,IAC5C8L,EAAO9L,EAAI,GAAKuM,EAAiBT,EAAO9L,EAAI,IAEhDxE,EAAQgQ,aAAaE,EAAS,EAAG,GACjCnH,MAGRkI,UAAW,WACP,OAAO,SAASjR,EAAS+I,GAIrB,IAHA,IAAImH,EAAUlQ,EAAQiQ,aAClB,EAAG,EAAGjQ,EAAQuC,OAAOlD,MAAOW,EAAQuC,OAAOV,QAC3CyO,EAASJ,EAAQK,KACZ/L,EAAI,EAAGA,EAAI8L,EAAOvK,OAAQvB,GAAK,EAAG,CACvC,IAAI0M,GAAOZ,EAAO9L,GAAK8L,EAAO9L,EAAI,GAAK8L,EAAO9L,EAAI,IAAM,EACxD8L,EAAO9L,GAAK0M,EACZZ,EAAO9L,EAAI,GAAK0M,EAChBZ,EAAO9L,EAAI,GAAK0M,EAEpBlR,EAAQgQ,aAAaE,EAAS,EAAG,GACjCnH,MAGRoI,OAAQ,WAEJ,IADA,IAAIC,EAAoB,GACf5M,EAAI,EAAGA,EAAI,IAAKA,IACrB4M,EAAkB5M,GAAK,IAAMA,EAEjC,OAAO,SAASxE,EAAS+I,GAIrB,IAHA,IAAImH,EAAUlQ,EAAQiQ,aAClB,EAAG,EAAGjQ,EAAQuC,OAAOlD,MAAOW,EAAQuC,OAAOV,QAC3CyO,EAASJ,EAAQK,KACZ/L,EAAI,EAAGA,EAAI8L,EAAOvK,OAAQvB,GAAK,EACpC8L,EAAO9L,GAAK4M,EAAkBd,EAAO9L,IACrC8L,EAAO9L,EAAI,GAAK4M,EAAkBd,EAAO9L,EAAI,IAC7C8L,EAAO9L,EAAI,GAAK4M,EAAkBd,EAAO9L,EAAI,IAEjDxE,EAAQgQ,aAAaE,EAAS,EAAG,GACjCnH,MAGRsI,wBAAyB,SAASC,EAAYC,GAC1C,GAAID,EAAa,IAAM,EACnB,MAAM,IAAIjG,MAAM,0CAEpB,IAAImG,EAAiBpR,KAAK6F,MAAMqL,EAAa,GAE7C,IAAKC,EACD,MAAM,IAAIlG,MAAM,iCAGpB,OAAO,SAASrL,EAAS+I,GAQrB,IAPA,IAKI0I,EALApS,EAAQW,EAAQuC,OAAOlD,MACvBwC,EAAS7B,EAAQuC,OAAOV,OACxBqO,EAAUlQ,EAAQiQ,aAAa,EAAG,EAAG5Q,EAAOwC,GAC5C6P,EAAiB1R,EAAQiQ,aAAa,EAAG,EAAG5Q,EAAOwC,GAClD0O,KAGIjR,EAAI,EAAGA,EAAIuC,EAAQvC,IACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOE,IAAK,CAK5B,IAHA,IAAIoS,EAAID,EADRD,EAA2B,GAAjBnS,EAAID,EAAQE,IAElBqS,EAAIF,EAAeD,EAAS,GAC5BI,EAAIH,EAAeD,EAAS,GACvBhD,EAAI,EAAGA,EAAI6C,EAAY7C,IAC5B,IAAK,IAAIjK,EAAI,EAAGA,EAAI8M,EAAY9M,IAAK,CACjC,IAAIsN,EAASvS,EAAIiF,EAAIgN,EACjBO,EAASzS,EAAImP,EAAI+C,EACjBM,GAAU,GAAKA,EAASzS,GACxB0S,GAAU,GAAKA,EAASlQ,IAExB8P,EAAIJ,EAAWG,EADfD,EAAqC,GAA3BM,EAAS1S,EAAQyS,IACYH,GACvCC,EAAIL,EACAG,EAAeD,EAAS,GAAIG,GAChCC,EAAIN,EACAG,EAAeD,EAAS,GAAII,IAI5C3B,EAAQK,KAAKkB,GAAUE,EACvBzB,EAAQK,KAAKkB,EAAS,GAAKG,EAC3B1B,EAAQK,KAAKkB,EAAS,GAAKI,EAGnC7R,EAAQgQ,aAAaE,EAAS,EAAG,GACjCnH,MAGRiJ,YAAa,SAASC,GAClB,IAAK9G,EAAE8C,QAAQgE,GACX,MAAM,IAAI5G,MAAM,gCAEpB,IAAIiG,EAAalR,KAAK8R,KAAKD,EAAOlM,QAClC,IAAKuL,EAAa,GAAK,IAAM,EACzB,MAAM,IAAIjG,MAAM,gEAGpB,IAAImG,GAAkBF,EAAa,GAAK,EAExC,OAAO,SAAStR,EAAS+I,GAQrB,IAPA,IAKI0I,EALApS,EAAQW,EAAQuC,OAAOlD,MACvBwC,EAAS7B,EAAQuC,OAAOV,OACxBqO,EAAUlQ,EAAQiQ,aAAa,EAAG,EAAG5Q,EAAOwC,GAC5C6P,EAAiB1R,EAAQiQ,aAAa,EAAG,EAAG5Q,EAAOwC,GAClD0O,KAGIjR,EAAI,EAAGA,EAAIuC,EAAQvC,IACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOE,IAAK,CAI5B,IAHA,IAAIoS,EAAI,EACJC,EAAI,EACJC,EAAI,EACCpD,EAAI,EAAGA,EAAI6C,EAAY7C,IAC5B,IAAK,IAAIjK,EAAI,EAAGA,EAAI8M,EAAY9M,IAAK,CACjC,IAAIsN,EAASvS,EAAIiF,EAAIgN,EACjBO,EAASzS,EAAImP,EAAI+C,EACrB,GAAIM,GAAU,GAAKA,EAASzS,GACxB0S,GAAU,GAAKA,EAASlQ,EAAQ,CAChC4P,EAAqC,GAA3BM,EAAS1S,EAAQyS,GAC3B,IAAIK,EAASF,EAAOxD,EAAI6C,EAAa9M,GACrCmN,GAAKD,EAAeD,GAAUU,EAC9BP,GAAKF,EAAeD,EAAS,GAAKU,EAClCN,GAAKH,EAAeD,EAAS,GAAKU,GAI9CV,EAA2B,GAAjBnS,EAAID,EAAQE,GACtB2Q,EAAQK,KAAKkB,GAAUE,EACvBzB,EAAQK,KAAKkB,EAAS,GAAKG,EAC3B1B,EAAQK,KAAKkB,EAAS,GAAKI,EAGnC7R,EAAQgQ,aAAaE,EAAS,EAAG,GACjCnH,OAncf,I,oCCd8DqJ,EAAOC,QAG7D,WAAc,aAqIvB,OArIqB,WAGnB,WAAa3S,EAAQnB,GAAS,qBAC5BiB,KAAKoM,QAAUlM,EACfF,KAAK8S,aAAe,EACpB9S,KAAKqM,gBAAkB,EACvBrM,KAAKsM,iBAAmB,EACxBtM,KAAK+S,WAAatR,SAASC,cAAc,OACzC1B,KAAK+S,WAAWtG,MAAMC,SAAW,WACjC1M,KAAK+S,WAAWtG,MAAME,KAAO,EAC7B3M,KAAK+S,WAAWtG,MAAMG,IAAM,EAC5B5M,KAAK+S,WAAWtG,MAAM5M,MAAQ,OAC9BG,KAAK+S,WAAWtG,MAAMpK,OAAS,OAC/BrC,KAAKoM,QAAQrJ,OAAO0F,YAAYzI,KAAK+S,YACrC/S,KAAKgT,QAAUvR,SAASC,cAAc,UACtC1B,KAAK+S,WAAWtK,YAAYzI,KAAKgT,SACjChT,KAAKM,SAAWvB,EAAQuB,UAAY,aACpCN,KAAKiT,kBAA4D,qBAA/BlU,EAAQkU,mBACxClU,EAAQkU,kBAcVjT,KAAKoM,QAAQzC,WAAW,mBAAmB,WACzC,EAAKmD,SACL,EAAKoG,mBAEPlT,KAAKoM,QAAQzC,WAAW,QAAQ,WAC9B,EAAKmD,SACL,EAAKoG,mBAvCU,2CA6EjB,OAAOlT,KAAKgT,UA7EK,kCAiFjB,OAAOhT,KAAKgT,QAAQrR,WAAW,QAjFd,8BAqFjB3B,KAAKgT,QAAQrR,WAAW,MACtBwR,UAAU,EAAG,EAAGnT,KAAKqM,gBAAkBrM,KAAK8S,aAAc9S,KAAKsM,iBAAmBtM,KAAK8S,gBAtFxE,+BA0FjB,IAAIA,EAAe,EACG,qBAAX9R,QAA0B,qBAAsBA,SACzD8R,EAAe9R,OAAOoS,kBAExB,IAAIC,EAAsBrT,KAAK8S,eAAiBA,EAChD9S,KAAK8S,aAAeA,GAChB9S,KAAKqM,kBAAoBrM,KAAKoM,QAAQzJ,UAAUsK,aAAeoG,KACjErT,KAAKqM,gBAAkBrM,KAAKoM,QAAQzJ,UAAUsK,YAC9CjN,KAAK+S,WAAW7F,aAAa,QAAS4F,EAAe9S,KAAKqM,iBAC1DrM,KAAKgT,QAAQ9F,aAAa,QAAS4F,EAAe9S,KAAKqM,iBACvDrM,KAAKgT,QAAQvG,MAAM5M,MAAQG,KAAKqM,gBAAkB,OAGhDrM,KAAKsM,mBAAqBtM,KAAKoM,QAAQzJ,UAAUwK,cAAgBkG,KACnErT,KAAKsM,iBAAmBtM,KAAKoM,QAAQzJ,UAAUwK,aAC/CnN,KAAK+S,WAAW7F,aAAa,SAAU4F,EAAe9S,KAAKsM,kBAC3DtM,KAAKgT,QAAQ9F,aAAa,SAAU4F,EAAe9S,KAAKsM,kBACxDtM,KAAKgT,QAAQvG,MAAMpK,OAASrC,KAAKsM,iBAAmB,QA3GrC,sCAgHjB,IAAIgH,EAAetT,KAAKoM,QAAQpJ,SAASwK,SAAQ,GAC7CxN,KAAKiT,mBACPjT,KAAKuT,QAGP,IADA,IAAI/S,EAAUR,KAAKgT,QAAQrR,WAAW,MAC7BqD,EAAI,EAAGwO,EAAQxT,KAAKoM,QAAQxC,MAAM2F,eAAgBvK,EAAIwO,EAAOxO,IAAK,CACzE,IAAIgE,EAAQhJ,KAAKoM,QAAQxC,MAAM4F,UAAUxK,GACzC,GAAIgE,EAAO,CACT,IAAIuE,EAAOvE,EAAMyK,oBAAoBH,GACjCI,EAAK1K,EAAM2K,2BAA2B,EAAG,GAAG,GAC5CvG,EAAIpN,KAAKoM,QAAQpJ,SAASqK,eAAeqG,GAAI,GACjDlT,EAAQmN,MAAM3N,KAAK8S,aAAc9S,KAAK8S,cACtCtS,EAAQoT,UAAUxG,EAAErN,EAAGqN,EAAEtN,GACzBU,EAAQmN,MAAMJ,EAAMA,GACpBvN,KAAKM,SAAS,CAAE+F,MAAOrB,EAAGxE,QAASA,EAAST,EAAGqN,EAAErN,EAAGD,EAAGsN,EAAEtN,EAAGyN,KAAMA,IAClE/M,EAAQqT,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,QA/HvB,6CA2CW3T,EAAQ4T,GAEpC,IADA,IAAIC,EAAc7T,EAAO8C,SAASgR,eAAeF,GACxC9O,EAAI,EAAGwO,EAAQtT,EAAO0J,MAAM2F,eAAgBvK,EAAIwO,EAAOxO,IAAK,CACnE,IAAImL,EAAajQ,EAAO0J,MAAM4F,UAAUxK,GAcpCiP,EAAkB,IAAI7T,cAAc8T,KAAKH,EAAYhU,EAAGgU,EAAYjU,EAAG,EAAG,GAE1EqU,EADoBhE,EAAWiE,+BAA+BH,GAC5BI,aAClC5R,EAAS0N,EAAW1N,OACxB,GAAI0R,EAAcpU,GAAK,GAAKoU,EAAcpU,GAAK,GAAKoU,EAAcrU,GAAK,GACrEqU,EAAcrU,GAAK,EAAI2C,EAAO6R,YAC9B,OAAOtP,EAOX,OAAQ,MAzES,KAH2DuP,I,iBCF/E,SAASpT,GAAG,aAAa,SAASqT,EAAErT,GAAGnB,KAAKyU,cAAczU,KAAK0U,WAAWvT,EAAEuL,WAAW,IAAIvL,EAAEgN,SAAShN,EAAEgN,QAAQC,MAAM,EAAE,MAAM,IAAIvC,MAAM,0EAA0E1K,EAAE4K,OAAOxJ,UAAUoS,IAAI,SAASH,GAAG,QAAQxU,KAAK4U,aAAaJ,MAAKA,EAAEA,GAAG,IAAKtU,OAAOF,KAAKA,KAAK4U,YAAY,IAAIzT,EAAE0T,IAAIL,IAAIxU,KAAK4U,aAAazT,EAAE0T,IAAI,SAASC,GAAG3T,EAAE4T,QAAO,EAAG/U,KAAK,CAACE,OAAO,KAAKuU,cAAc,MAAMK,GAAG9U,KAAKyU,gBAAgBzU,KAAKgV,QAAQ,IAAI7T,EAAE0M,aAAa,CAACvC,QAAQtL,KAAKE,OAAO6C,OAAOkS,YAAY9T,EAAE+T,SAASlV,KAAKwU,OAAOrT,EAAE4T,OAAO5T,EAAE0T,IAAItS,UAAUpB,EAAEgU,YAAY5S,UAAU,CAACmS,WAAW,SAASF,EAAEM,GAAG,IAAI3C,EAAE,IAAIiD,UAAU7O,OAAOiO,EAAE,IAAIrT,EAAEmM,MAAMkH,EAAEM,GAAGO,EAAErV,KAAKE,OAAO8E,EAAEqQ,EAAEC,OAAOC,SAASpD,GAAG,GAAGnN,EAAE,IAAI,IAAItB,EAAE8R,EAAEpD,EAAEpB,EAAE,EAAEA,EAAEqE,EAAEzL,MAAM2F,eAAeyB,IAA2BoB,GAAvB1O,EAAE2R,EAAEzL,MAAM4F,UAAUwB,IAAOyE,kBAAiBD,EAAErU,EAAEuU,WAAWnT,UAAUoT,gCAAgCjS,EAAEiS,gCAAgCxD,GAAGkD,EAAErS,SAAS2S,gCAAgCxD,IAAKpS,GAAG,GAAGyV,EAAE1V,GAAG,GAAG0V,EAAEzV,GAAGqS,EAAErS,GAAGyV,EAAE1V,GAAGsS,EAAEtS,IAAIkF,EAAEgE,MAAMtF,EAAEsB,EAAE4Q,iBAAiBJ,GAAG,OAAOxQ,KAAK7D,EAAE0U,OAAOtT,UAAUgT,SAAS,SAASf,GAAG,IAAIxU,KAAK8V,UAAU,OAAM,EAAG,IAAIhB,EAAE3T,EAAE4U,kBAAkB5D,EAAEnS,KAAKgW,cAAcvF,aAAa+D,EAAEzU,EAAE+U,EAAEN,EAAE1U,EAAEgV,EAAE,EAAE,GAAG/D,KAAK,MAAM,CAACoB,EAAEA,EAAE,GAAGC,EAAED,EAAE,GAAGE,EAAEF,EAAE,GAAGzO,EAAEyO,EAAE,KAAvqC,CAA6qC/R,gB,sFCU/pC6V,MANf,WACI,OACI,kBAACrX,EAAA,EAAD,OCDRsX,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF3U,SAAS4U,eAAe,W","file":"js/main.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './index.css'\nimport '../public/openseadragon-bin-2.4.0/OpenSeadragonLoader.js'\nimport '../public/openseadragon-bin-2.4.0/viaWebGL'\nimport '../public/openseadragon-bin-2.4.0/openSeadragonGL'\nimport '../public/openseadragon-bin-2.4.0/openseadragon-svg-overlay'\nimport '../public/openseadragon-bin-2.4.0/openseadragon-filtering'\nimport '../public/openseadragon-bin-2.4.0/canvas-overlay-hd'\nimport '../public/openseadragon-bin-2.4.0/openseadragonrgb'\n\n\nexport default class OpenSeadragonComponent extends Component {\n    constructor(props) {\n        super(props);\n        var tileSource = {\n            Image: {\n                xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n                Url: \"http://openseadragon.github.io/example-images/highsmith/highsmith_files/\",\n                Format: \"jpg\",\n                Overlap: \"2\",\n                TileSize: \"256\",\n                Size: {\n                    Height: \"9221\",\n                    Width: \"7026\"\n                }\n            }\n        };\n        this.state = {\n            options: {\n                id: \"viewer\",\n                prefixUrl: \"https://cdn.jsdelivr.net/npm/openseadragon/build/openseadragon/images/\",\n                tileSources: [{\n                    tileSource: {\n                        Image: {\n                            xmlns: \"http://schemas.microsoft.com/deepzoom/2008\",\n                            Url: \"http://openseadragon.github.io/example-images/highsmith/highsmith_files/\",\n                            Format: \"jpg\",\n                            Overlap: \"2\",\n                            TileSize: \"256\",\n                            Size: {\n                                Height: \"9221\",\n                                Width: \"7026\"\n                            }\n                        }\n                    },\n                    width: 2,\n                    y: 0.5,\n                    x: 0.5\n                }]\n            }\n        };\n    }\n\n    componentDidMount() {\n        this.initialiseWidgets();\n    }\n\n    componentDidUpdate() {\n        this.initialiseWidgets();\n    }\n\n    initialiseWidgets() {\n        // eslint-disable-next-line no-undef\n        this.viewer = global.OpenSeadragon(this.state.options);\n        const overlay = new global.OpenSeadragon.CanvasOverlayHd(this.viewer, {\n            onRedraw: function (opts) {\n                const context = opts.context;\n                context.fillStyle = \"#a6cee3\";\n                context.beginPath();\n                context.arc(150, 150, 150, 0, Math.PI * 2, true);\n                context.fill();\n            }\n        });\n\n    }\n\n    render() {\n        return (\n            <div id={this.state.options.id}>\n            </div>\n        );\n    }\n};","import OpenSeadragon from 'openseadragon'\nglobal.OpenSeadragon = window.OpenSeadragon = OpenSeadragon\n","/*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~\n/* viaWebGL\n/* Set shaders on Image or Canvas with WebGL\n/* Built on 2016-9-9\n/* http://via.hoff.in\n*/\nViaWebGL = function(incoming) {\n\n    /* Custom WebGL API calls\n    ~*~*~*~*~*~*~*~*~*~*~*~*/\n    this['gl-drawing'] = function(e) { return e; };\n    this['gl-loaded'] = function(e) { return e; };\n    this.ready = function(e) { return e; };\n\n    var gl = this.maker();\n    this.flat = document.createElement('canvas').getContext('2d');\n    this.tile_size = 'u_tile_size';\n    this.vShader = 'vShader.glsl';\n    this.fShader = 'fShader.glsl';\n    this.wrap = gl.CLAMP_TO_EDGE;\n    this.tile_pos = 'a_tile_pos';\n    this.filter = gl.NEAREST;\n    this.pos = 'a_pos';\n    this.height = 128;\n    this.width = 128;\n    this.on = 0;\n    this.gl = gl;\n    // Assign from incoming terms\n    for (var key in incoming) {\n        this[key] = incoming[key];\n    }\n};\n\nViaWebGL.prototype = {\n\n    init: function(source) {\n        var ready = this.ready;\n        // Allow for mouse actions on click\n        if (this.hasOwnProperty('container') && this.hasOwnProperty('onclick')) {\n            this.container.onclick = this[this.onclick].bind(this);\n        }\n        if (source && source.height && source.width) {\n            this.ready = this.toCanvas.bind(this,source);\n            this.height = source.height;\n            this.width = source.width;\n        }\n        this.source = source;\n        this.gl.canvas.width = this.width;\n        this.gl.canvas.height = this.height;\n        this.gl.viewport(0, 0, this.width, this.height);\n        // Load the shaders when ready and return the promise\n        var step = [[this.vShader, this.fShader].map(this.getter)];\n        step.push(this.toProgram.bind(this), this.toBuffers.bind(this));\n        return Promise.all(step[0]).then(step[1]).then(step[2]).then(this.ready);\n\n    },\n    // Make a canvas\n    maker: function(options){\n        return this.context(document.createElement('canvas'));\n    },\n    context: function(a){\n        return a.getContext('experimental-webgl') || a.getContext('webgl');\n    },\n    // Get a file as a promise\n    getter: function(where) {\n        return new Promise(function(done){\n            // Return if not a valid filename\n            if (where.slice(-4) != 'glsl') {\n                return done(where);\n            }\n            var bid = new XMLHttpRequest();\n            var win = function(){\n                if (bid.status == 200) {\n                    return done(bid.response);\n                }\n                return done(where);\n            };\n            bid.open('GET', where, true);\n            bid.onerror = bid.onload = win;\n            bid.send();\n        });\n    },\n    // Link shaders from strings\n    toProgram: function(files) {\n        var gl = this.gl;\n        var program = gl.createProgram();\n        var ok = function(kind,status,value,sh) {\n            if (!gl['get'+kind+'Parameter'](value, gl[status+'_STATUS'])){\n                console.log((sh||'LINK')+':\\n'+gl['get'+kind+'InfoLog'](value));\n            }\n            return value;\n        }\n        // 1st is vertex; 2nd is fragment\n        files.map(function(given,i) {\n            var sh = ['VERTEX_SHADER', 'FRAGMENT_SHADER'][i];\n            var shader = gl.createShader(gl[sh]);\n            gl.shaderSource(shader, given);\n            gl.compileShader(shader);\n            gl.attachShader(program, shader);\n            ok('Shader','COMPILE',shader,sh);\n        });\n        gl.linkProgram(program);\n        return ok('Program','LINK',program);\n    },\n    // Load data to the buffers\n    toBuffers: function(program) {\n\n        // Allow for custom loading\n        this.gl.useProgram(program);\n        this['gl-loaded'].call(this, program);\n\n        // Unchangeable square array buffer fills viewport with texture\n        var boxes = [[-1, 1,-1,-1, 1, 1, 1,-1], [0, 1, 0, 0, 1, 1, 1, 0]];\n        var buffer = new Float32Array([].concat.apply([], boxes));\n        var bytes = buffer.BYTES_PER_ELEMENT;\n        var gl = this.gl;\n        var count = 4;\n\n        // Get uniform term\n        var tile_size = gl.getUniformLocation(program, this.tile_size);\n        gl.uniform2f(tile_size, gl.canvas.height, gl.canvas.width);\n\n        // Get attribute terms\n        this.att = [this.pos, this.tile_pos].map(function(name, number) {\n\n            var index = Math.min(number, boxes.length-1);\n            var vec = Math.floor(boxes[index].length/count);\n            var vertex = gl.getAttribLocation(program, name);\n\n            return [vertex, vec, gl.FLOAT, 0, vec*bytes, count*index*vec*bytes];\n        });\n        // Get texture\n        this.tex = {\n            texParameteri: [\n                [gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, this.wrap],\n                [gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, this.wrap],\n                [gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this.filter],\n                [gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this.filter]\n            ],\n            texImage2D: [gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE],\n            bindTexture: [gl.TEXTURE_2D, gl.createTexture()],\n            drawArrays: [gl.TRIANGLE_STRIP, 0, count],\n            pixelStorei: [gl.UNPACK_FLIP_Y_WEBGL, 1]\n        };\n        // Build the position and texture buffer\n        gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n        gl.bufferData(gl.ARRAY_BUFFER, buffer, gl.STATIC_DRAW);\n    },\n    // Turns image or canvas into a rendered canvas\n    toCanvas: function(tile) {\n        // Stop Rendering\n        if (this.on%2 !== 0) {\n            if(tile.nodeName == 'IMG') {\n                this.flat.canvas.width = tile.width;\n                this.flat.canvas.height = tile.height;\n                this.flat.drawImage(tile,0,0,tile.width,tile.height);\n                return this.flat.canvas;\n            }\n            return tile;\n        }\n\n        // Allow for custom drawing in webGL\n        this['gl-drawing'].call(this,tile);\n        var gl = this.gl;\n\n        // Set Attributes for GLSL\n        this.att.map(function(x){\n\n            gl.enableVertexAttribArray(x.slice(0,1));\n            gl.vertexAttribPointer.apply(gl, x);\n        });\n\n        // Set Texture for GLSL\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture.apply(gl, this.tex.bindTexture);\n        gl.pixelStorei.apply(gl, this.tex.pixelStorei);\n\n        // Apply texture parameters\n        this.tex.texParameteri.map(function(x){\n            gl.texParameteri.apply(gl, x);\n        });\n        // Send the tile into the texture.\n        var output = this.tex.texImage2D.concat([tile]);\n        gl.texImage2D.apply(gl, output);\n\n        // Draw everything needed to canvas\n        gl.drawArrays.apply(gl, this.tex.drawArrays);\n\n        // Apply to container if needed\n        if (this.container) {\n            this.container.appendChild(this.gl.canvas);\n        }\n        return this.gl.canvas;\n    },\n    toggle: function() {\n        this.on ++;\n        this.container.innerHTML = '';\n        this.container.appendChild(this.toCanvas(this.source));\n\n    }\n}","/*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~\n/* openSeadragonGL - Set Shaders in OpenSeaDragon with viaWebGL\n*/\nopenSeadragonGL = function(openSD) {\n\n    /* OpenSeaDragon API calls\n    ~*~*~*~*~*~*~*~*~*~*~*~*/\n    this.interface = {\n        'tile-loaded': function(e) {\n            // Set the imageSource as a data URL and then complete\n            var output = this.viaGL.toCanvas(e.image);\n            e.image.onload = e.getCompletionCallback();\n            e.image.src = output.toDataURL();\n        },\n        'tile-drawing': function(e) {\n            // Render a webGL canvas to an input canvas\n            var input = e.rendered.canvas;\n            e.rendered.drawImage(this.viaGL.toCanvas(input), 0, 0, input.width, input.height);\n        }\n    };\n    this.defaults = {\n        'tile-loaded': function(callback, e) {\n            callback(e);\n        },\n        'tile-drawing': function(callback, e) {\n            if (e.tile.loaded !==1) {\n                e.tile.loaded = 1;\n                callback(e);\n            }\n        }\n    };\n    this.openSD = openSD;\n    this.viaGL = new ViaWebGL();\n};\n\nopenSeadragonGL.prototype = {\n    // Map to viaWebGL and openSeadragon\n\n    // jojo - forcing init manually, make sure data has been loaded\n    forceinit: function() {\n        var open = this.merger.bind(this);\n        open();\n        return this;\n    },\n    init: function() {\n        var open = this.merger.bind(this);\n        this.openSD.addHandler('open',open);\n\n        //jojo - handles addTiledImage()\n        this.openSD.world.addHandler('add-item',open);\n\n        return this;\n    },\n    // User adds events\n    addHandler: function(key,custom) {\n        if (key in this.defaults){\n            this[key] = this.defaults[key];\n        }\n        if (typeof custom == 'function') {\n            this[key] = custom;\n        }\n    },\n    // Merge with viaGL\n    merger: function(e) {\n\n        // jojo - check with multiple datasources being loaded\n        //var tilesource = this.openSD.viewer.world.getItemAt(0);\n        var tilesource = this.openSD.source;\n\n        // Take GL height and width from OpenSeaDragon\n        this.width = tilesource.getTileWidth();\n        this.height = tilesource.getTileHeight();\n        // Add all viaWebGL properties\n        for (var key of this.and(this.viaGL)) {\n            this.viaGL[key] = this[key];\n        }\n        this.viaGL.init().then(this.adder.bind(this));\n    },\n    // Add all seadragon properties\n    adder: function(e) {\n        for (var key of this.and(this.defaults)) {\n            var handler = this[key].bind(this);\n            var interface = this.interface[key].bind(this);\n            // Add all openSeadragon event handlers\n            this.openSD.addHandler(key, function(e) {\n                handler.call(this, interface, e);\n            });\n        }\n    },\n    // Joint keys\n    and: function(obj) {\n      return Object.keys(obj).filter(Object.hasOwnProperty,this);\n    },\n    // Add your own button to OSD controls\n    button: function(terms) {\n\n        var name = terms.name || 'tool';\n        var prefix = terms.prefix || this.openSD.prefixUrl;\n        if (!terms.hasOwnProperty('onClick')){\n            terms.onClick = this.shade;\n        }\n        terms.onClick = terms.onClick.bind(this);\n        terms.srcRest = terms.srcRest || prefix+name+'_rest.png';\n        terms.srcHover = terms.srcHover || prefix+name+'_hover.png';\n        terms.srcDown = terms.srcDown || prefix+name+'_pressed.png';\n        terms.srcGroup = terms.srcGroup || prefix+name+'_grouphover.png';\n        // Replace the current controls with the same controls plus a new button\n        this.openSD.clearControls().buttons.buttons.push(new OpenSeadragon.Button(terms));\n        var toolbar = new OpenSeadragon.ButtonGroup({buttons: this.openSD.buttons.buttons});\n        this.openSD.addControl(toolbar.element,{anchor: OpenSeadragon.ControlAnchor.TOP_LEFT});\n    },\n    // Switch Shaders on or off\n    shade: function() {\n\n        this.viaGL.on++;\n        this.openSD.world.resetItems();\n    }\n}\n","// OpenSeadragon SVG Overlay plugin 0.0.5\n\n(function() {\n\n    var $ = window.OpenSeadragon;\n    \n    if (!$) {\n        $ = require('openseadragon');\n        if (!$) {\n            throw new Error('OpenSeadragon is missing.');\n        }\n    }\n\n    var svgNS = 'http://www.w3.org/2000/svg';\n\n    // ----------\n    $.Viewer.prototype.svgOverlay = function() {\n        if (this._svgOverlayInfo) {\n            return this._svgOverlayInfo;\n        }\n\n        this._svgOverlayInfo = new Overlay(this);\n        return this._svgOverlayInfo;\n    };\n\n    // ----------\n    var Overlay = function(viewer) {\n        var self = this;\n\n        this._viewer = viewer;\n        this._containerWidth = 0;\n        this._containerHeight = 0;\n\n        this._svg = document.createElementNS(svgNS, 'svg');\n        this._svg.id = \"svgOverlay\";\n        this._svg.style.position = 'absolute';\n        this._svg.style.left = 0;\n        this._svg.style.top = 0;\n        this._svg.style.width = '100%';\n        this._svg.style.height = '100%';\n        this._viewer.canvas.appendChild(this._svg);\n\n        this._node = document.createElementNS(svgNS, 'g');\n        this._svg.appendChild(this._node);\n\n        this._viewer.addHandler('animation', function() {\n            self.resize();\n        });\n\n        this._viewer.addHandler('open', function() {\n            self.resize();\n        });\n\n        this._viewer.addHandler('rotate', function(evt) {\n            self.resize();\n        });\n\n        this._viewer.addHandler('resize', function() {\n            self.resize();\n        });\n\n        this.resize();\n    };\n\n    // ----------\n    Overlay.prototype = {\n        // ----------\n        node: function() {\n            return this._node;\n        },\n\n        // ----------\n        resize: function() {\n            if (this._containerWidth !== this._viewer.container.clientWidth) {\n                this._containerWidth = this._viewer.container.clientWidth;\n                this._svg.setAttribute('width', this._containerWidth);\n            }\n\n            if (this._containerHeight !== this._viewer.container.clientHeight) {\n                this._containerHeight = this._viewer.container.clientHeight;\n                this._svg.setAttribute('height', this._containerHeight);\n            }\n\n            var p = this._viewer.viewport.pixelFromPoint(new $.Point(0, 0), true);\n            var zoom = this._viewer.viewport.getZoom(true);\n            var rotation = this._viewer.viewport.getRotation();\n            // TODO: Expose an accessor for _containerInnerSize in the OSD API so we don't have to use the private variable.\n            var scale = this._viewer.viewport._containerInnerSize.x * zoom;\n            this._node.setAttribute('transform',\n                'translate(' + p.x + ',' + p.y + ') scale(' + scale + ') rotate(' + rotation + ')');\n        },\n\n        // ----------\n        onClick: function(node, handler) {\n            // TODO: Fast click for mobile browsers\n\n            new $.MouseTracker({\n                element: node,\n                clickHandler: handler\n            }).setTracking(true);\n        },\n\n\n        onDrag: function(node, handler){\n          new $.MouseTracker({\n            element: node,\n            dragHandler: function(event) {\n              // Move node by event.delta\n            }\n          }).setTracking(true);\n        }\n\n\n\n    };\n\n})();\n","/*\n * This software was developed at the National Institute of Standards and\n * Technology by employees of the Federal Government in the course of\n * their official duties. Pursuant to title 17 Section 105 of the United\n * States Code this software is not subject to copyright protection and is\n * in the public domain. This software is an experimental system. NIST assumes\n * no responsibility whatsoever for its use by other parties, and makes no\n * guarantees, expressed or implied, about its quality, reliability, or\n * any other characteristic. We would appreciate acknowledgement if the\n * software is used.\n */\n\n/**\n *\n * @author Antoine Vandecreme <antoine.vandecreme@nist.gov>\n */\n(function() {\n\n    'use strict';\n\n    var $ = window.OpenSeadragon;\n    if (!$) {\n        $ = require('openseadragon');\n        if (!$) {\n            throw new Error('OpenSeadragon is missing.');\n        }\n    }\n    // Requires OpenSeadragon >=2.1\n    if (!$.version || $.version.major < 2 ||\n        $.version.major === 2 && $.version.minor < 1) {\n        throw new Error(\n            'Filtering plugin requires OpenSeadragon version >= 2.1');\n    }\n\n    $.Viewer.prototype.setFilterOptions = function(options) {\n        if (!this.filterPluginInstance) {\n            options = options || {};\n            options.viewer = this;\n            this.filterPluginInstance = new $.FilterPlugin(options);\n        } else {\n            setOptions(this.filterPluginInstance, options);\n        }\n    };\n\n    //jojo\n    $.Viewer.prototype.forceRefilter = function(){\n        if (this.filterPluginInstance) {\n            this.filterPluginInstance.filterIncrement++;\n        }\n    }\n\n    /**\n     * @class FilterPlugin\n     * @param {Object} options The options\n     * @param {OpenSeadragon.Viewer} options.viewer The viewer to attach this\n     * plugin to.\n     * @param {String} [options.loadMode='async'] Set to sync to have the filters\n     * applied synchronously. It will only work if the filters are all synchronous.\n     * Note that depending on how complex the filters are, it may also hang the browser.\n     * @param {Object[]} options.filters The filters to apply to the images.\n     * @param {OpenSeadragon.TiledImage[]} options.filters[x].items The tiled images\n     * on which to apply the filter.\n     * @param {function|function[]} options.filters[x].processors The processing\n     * function(s) to apply to the images. The parameters of this function are\n     * the context to modify and a callback to call upon completion.\n     */\n    $.FilterPlugin = function(options) {\n        options = options || {};\n        if (!options.viewer) {\n            throw new Error('A viewer must be specified.');\n        }\n        var self = this;\n        this.viewer = options.viewer;\n\n        this.viewer.addHandler('tile-loaded', tileLoadedHandler);\n        this.viewer.addHandler('tile-drawing', tileDrawingHandler);\n\n        // filterIncrement allows to determine whether a tile contains the\n        // latest filters results.\n        this.filterIncrement = 0;\n\n        setOptions(this, options);\n\n//jojo\n        function tileLoadedHandler(event) {\n            var processors = getFiltersProcessors(self, event.tiledImage);\n            if (processors.length === 0) {\n                return;\n            }\n            var tile = event.tile;\n            var image = event.image;\n            if (image !== null && image !== undefined) {\n                var canvas = window.document.createElement('canvas');\n                canvas.width = image.width;\n                canvas.height = image.height;\n                var context = canvas.getContext('2d');\n                context.drawImage(image, 0, 0);\n                tile._renderedContext = context;\n                var callback = event.getCompletionCallback();\n                applyFilters(context, processors, tile, callback);\n                tile._filterIncrement = self.filterIncrement;\n            }\n        }\n\n//jojo\n        function applyFilters(context, filtersProcessors, tile, callback) {\n            if (callback) {\n                var currentIncrement = self.filterIncrement;\n                var callbacks = [];\n                for (var i = 0; i < filtersProcessors.length - 1; i++) {\n                    (function(i) {\n                        callbacks[i] = function() {\n                            // If the increment has changed, stop the computation\n                            // chain immediately.\n                            if (self.filterIncrement !== currentIncrement) {\n                                return;\n                            }\n                            filtersProcessors[i + 1](context, callbacks[i + 1],tile);\n                        };\n                    })(i);\n                }\n                callbacks[filtersProcessors.length - 1] = function() {\n                    // If the increment has changed, do not call the callback.\n                    // (We don't want OSD to draw an outdated tile in the canvas).\n                    if (self.filterIncrement !== currentIncrement) {\n                        return;\n                    }\n                    callback();\n                };\n                filtersProcessors[0](context, callbacks[0],tile);\n            } else {\n                for (var i = 0; i < filtersProcessors.length; i++) {\n                    filtersProcessors[i](context, function() {\n                    }, tile);\n                }\n            }\n        }\n\n        function tileDrawingHandler(event) {\n            var tile = event.tile;\n            var rendered = event.rendered;\n            if (rendered._filterIncrement === self.filterIncrement) {\n                return;\n            }\n            var processors = getFiltersProcessors(self, event.tiledImage);\n            if (processors.length === 0) {\n                if (rendered._originalImageData) {\n                    // Restore initial data.\n                    rendered.putImageData(rendered._originalImageData, 0, 0);\n                    delete rendered._originalImageData;\n                }\n                rendered._filterIncrement = self.filterIncrement;\n                return;\n            }\n\n            if (rendered._originalImageData) {\n                // The tile has been previously filtered (by another filter),\n                // restore it first.\n                rendered.putImageData(rendered._originalImageData, 0, 0);\n            } else {\n                rendered._originalImageData = rendered.getImageData(\n                    0, 0, rendered.canvas.width, rendered.canvas.height);\n            }\n\n            if (tile._renderedContext) {\n                if (tile._filterIncrement === self.filterIncrement) {\n                    var imgData = tile._renderedContext.getImageData(0, 0,\n                        tile._renderedContext.canvas.width,\n                        tile._renderedContext.canvas.height);\n                    rendered.putImageData(imgData, 0, 0);\n                    delete tile._renderedContext;\n                    delete tile._filterIncrement;\n                    rendered._filterIncrement = self.filterIncrement;\n                    return;\n                }\n                delete tile._renderedContext;\n                delete tile._filterIncrement;\n            }\n            applyFilters(rendered, processors,tile); //jojo\n            rendered._filterIncrement = self.filterIncrement;\n        }\n    };\n\n    function setOptions(instance, options) {\n        options = options || {};\n        var filters = options.filters;\n        instance.filters = !filters ? [] :\n            $.isArray(filters) ? filters : [filters];\n        for (var i = 0; i < instance.filters.length; i++) {\n            var filter = instance.filters[i];\n            if (!filter.processors) {\n                throw new Error('Filter processors must be specified.');\n            }\n            filter.processors = $.isArray(filter.processors) ?\n                filter.processors : [filter.processors];\n        }\n        instance.filterIncrement++;\n\n        if (options.loadMode === 'sync') {\n            instance.viewer.forceRedraw();\n        } else {\n            var itemsToReset = [];\n            for (var i = 0; i < instance.filters.length; i++) {\n                var filter = instance.filters[i];\n                if (!filter.items) {\n                    itemsToReset = getAllItems(instance.viewer.world);\n                    break;\n                }\n                if ($.isArray(filter.items)) {\n                    for (var j = 0; j < filter.items.length; j++) {\n                        addItemToReset(filter.items[j], itemsToReset);\n                    }\n                } else {\n                    addItemToReset(filter.items, itemsToReset);\n                }\n            }\n            for (var i = 0; i < itemsToReset.length; i++) {\n                itemsToReset[i].reset();\n            }\n        }\n    }\n\n    function addItemToReset(item, itemsToReset) {\n        if (itemsToReset.indexOf(item) >= 0) {\n            throw new Error('An item can not have filters ' +\n                'assigned multiple times.');\n        }\n        itemsToReset.push(item);\n    }\n\n    function getAllItems(world) {\n        var result = [];\n        for (var i = 0; i < world.getItemCount(); i++) {\n            result.push(world.getItemAt(i));\n        }\n        return result;\n    }\n\n    function getFiltersProcessors(instance, item) {\n        if (instance.filters.length === 0) {\n            return [];\n        }\n\n        var globalProcessors = null;\n        for (var i = 0; i < instance.filters.length; i++) {\n            var filter = instance.filters[i];\n            if (!filter.items) {\n                globalProcessors = filter.processors;\n            } else if (filter.items === item ||\n                $.isArray(filter.items) && filter.items.indexOf(item) >= 0) {\n                return filter.processors;\n            }\n        }\n        return globalProcessors ? globalProcessors : [];\n    }\n\n    $.Filters = {\n        THRESHOLDING: function(threshold) {\n            if (threshold < 0 || threshold > 255) {\n                throw new Error('Threshold must be between 0 and 255.');\n            }\n            return function(context, callback) {\n                var imgData = context.getImageData(\n                    0, 0, context.canvas.width, context.canvas.height);\n                var pixels = imgData.data;\n                for (var i = 0; i < pixels.length; i += 4) {\n                    var r = pixels[i];\n                    var g = pixels[i + 1];\n                    var b = pixels[i + 2];\n                    var v = (r + g + b) / 3;\n                    pixels[i] = pixels[i + 1] = pixels[i + 2] =\n                        v < threshold ? 0 : 255;\n                }\n                context.putImageData(imgData, 0, 0);\n                callback();\n            };\n        },\n        BRIGHTNESS: function(adjustment) {\n            if (adjustment < -255 || adjustment > 255) {\n                throw new Error(\n                    'Brightness adjustment must be between -255 and 255.');\n            }\n            var precomputedBrightness = [];\n            for (var i = 0; i < 256; i++) {\n                precomputedBrightness[i] = i + adjustment;\n            }\n            return function(context, callback) {\n                var imgData = context.getImageData(\n                    0, 0, context.canvas.width, context.canvas.height);\n                var pixels = imgData.data;\n                for (var i = 0; i < pixels.length; i += 4) {\n                    pixels[i] = precomputedBrightness[pixels[i]];\n                    pixels[i + 1] = precomputedBrightness[pixels[i + 1]];\n                    pixels[i + 2] = precomputedBrightness[pixels[i + 2]];\n                }\n                context.putImageData(imgData, 0, 0);\n                callback();\n            };\n        },\n        CONTRAST: function(adjustment) {\n            if (adjustment < 0) {\n                throw new Error('Contrast adjustment must be positive.');\n            }\n            var precomputedContrast = [];\n            for (var i = 0; i < 256; i++) {\n                precomputedContrast[i] = i * adjustment;\n            }\n            return function(context, callback) {\n                var imgData = context.getImageData(\n                    0, 0, context.canvas.width, context.canvas.height);\n                var pixels = imgData.data;\n                for (var i = 0; i < pixels.length; i += 4) {\n                    pixels[i] = precomputedContrast[pixels[i]];\n                    pixels[i + 1] = precomputedContrast[pixels[i + 1]];\n                    pixels[i + 2] = precomputedContrast[pixels[i + 2]];\n                }\n                context.putImageData(imgData, 0, 0);\n                callback();\n            };\n        },\n        GAMMA: function(adjustment) {\n            if (adjustment < 0) {\n                throw new Error('Gamma adjustment must be positive.');\n            }\n            var precomputedGamma = [];\n            for (var i = 0; i < 256; i++) {\n                precomputedGamma[i] = Math.pow(i / 255, adjustment) * 255;\n            }\n            return function(context, callback) {\n                var imgData = context.getImageData(\n                    0, 0, context.canvas.width, context.canvas.height);\n                var pixels = imgData.data;\n                for (var i = 0; i < pixels.length; i += 4) {\n                    pixels[i] = precomputedGamma[pixels[i]];\n                    pixels[i + 1] = precomputedGamma[pixels[i + 1]];\n                    pixels[i + 2] = precomputedGamma[pixels[i + 2]];\n                }\n                context.putImageData(imgData, 0, 0);\n                callback();\n            };\n        },\n        GREYSCALE: function() {\n            return function(context, callback) {\n                var imgData = context.getImageData(\n                    0, 0, context.canvas.width, context.canvas.height);\n                var pixels = imgData.data;\n                for (var i = 0; i < pixels.length; i += 4) {\n                    var val = (pixels[i] + pixels[i + 1] + pixels[i + 2]) / 3;\n                    pixels[i] = val;\n                    pixels[i + 1] = val;\n                    pixels[i + 2] = val;\n                }\n                context.putImageData(imgData, 0, 0);\n                callback();\n            };\n        },\n        INVERT: function() {\n            var precomputedInvert = [];\n            for (var i = 0; i < 256; i++) {\n                precomputedInvert[i] = 255 - i;\n            }\n            return function(context, callback) {\n                var imgData = context.getImageData(\n                    0, 0, context.canvas.width, context.canvas.height);\n                var pixels = imgData.data;\n                for (var i = 0; i < pixels.length; i += 4) {\n                    pixels[i] = precomputedInvert[pixels[i]];\n                    pixels[i + 1] = precomputedInvert[pixels[i + 1]];\n                    pixels[i + 2] = precomputedInvert[pixels[i + 2]];\n                }\n                context.putImageData(imgData, 0, 0);\n                callback();\n            };\n        },\n        MORPHOLOGICAL_OPERATION: function(kernelSize, comparator) {\n            if (kernelSize % 2 === 0) {\n                throw new Error('The kernel size must be an odd number.');\n            }\n            var kernelHalfSize = Math.floor(kernelSize / 2);\n\n            if (!comparator) {\n                throw new Error('A comparator must be defined.');\n            }\n\n            return function(context, callback) {\n                var width = context.canvas.width;\n                var height = context.canvas.height;\n                var imgData = context.getImageData(0, 0, width, height);\n                var originalPixels = context.getImageData(0, 0, width, height)\n                    .data;\n                var offset;\n\n                for (var y = 0; y < height; y++) {\n                    for (var x = 0; x < width; x++) {\n                        offset = (y * width + x) * 4;\n                        var r = originalPixels[offset];\n                        var g = originalPixels[offset + 1];\n                        var b = originalPixels[offset + 2];\n                        for (var j = 0; j < kernelSize; j++) {\n                            for (var i = 0; i < kernelSize; i++) {\n                                var pixelX = x + i - kernelHalfSize;\n                                var pixelY = y + j - kernelHalfSize;\n                                if (pixelX >= 0 && pixelX < width &&\n                                    pixelY >= 0 && pixelY < height) {\n                                    offset = (pixelY * width + pixelX) * 4;\n                                    r = comparator(originalPixels[offset], r);\n                                    g = comparator(\n                                        originalPixels[offset + 1], g);\n                                    b = comparator(\n                                        originalPixels[offset + 2], b);\n                                }\n                            }\n                        }\n                        imgData.data[offset] = r;\n                        imgData.data[offset + 1] = g;\n                        imgData.data[offset + 2] = b;\n                    }\n                }\n                context.putImageData(imgData, 0, 0);\n                callback();\n            };\n        },\n        CONVOLUTION: function(kernel) {\n            if (!$.isArray(kernel)) {\n                throw new Error('The kernel must be an array.');\n            }\n            var kernelSize = Math.sqrt(kernel.length);\n            if ((kernelSize + 1) % 2 !== 0) {\n                throw new Error('The kernel must be a square matrix with odd' +\n                    'width and height.');\n            }\n            var kernelHalfSize = (kernelSize - 1) / 2;\n\n            return function(context, callback) {\n                var width = context.canvas.width;\n                var height = context.canvas.height;\n                var imgData = context.getImageData(0, 0, width, height);\n                var originalPixels = context.getImageData(0, 0, width, height)\n                    .data;\n                var offset;\n\n                for (var y = 0; y < height; y++) {\n                    for (var x = 0; x < width; x++) {\n                        var r = 0;\n                        var g = 0;\n                        var b = 0;\n                        for (var j = 0; j < kernelSize; j++) {\n                            for (var i = 0; i < kernelSize; i++) {\n                                var pixelX = x + i - kernelHalfSize;\n                                var pixelY = y + j - kernelHalfSize;\n                                if (pixelX >= 0 && pixelX < width &&\n                                    pixelY >= 0 && pixelY < height) {\n                                    offset = (pixelY * width + pixelX) * 4;\n                                    var weight = kernel[j * kernelSize + i];\n                                    r += originalPixels[offset] * weight;\n                                    g += originalPixels[offset + 1] * weight;\n                                    b += originalPixels[offset + 2] * weight;\n                                }\n                            }\n                        }\n                        offset = (y * width + x) * 4;\n                        imgData.data[offset] = r;\n                        imgData.data[offset + 1] = g;\n                        imgData.data[offset + 2] = b;\n                    }\n                }\n                context.putImageData(imgData, 0, 0);\n                callback();\n            };\n        }\n    };\n\n}());\n","// https://github.com/joshua-gould/OpenSeadragonCanvasOverlayHd v1.0.0 Copyright 2018 Joshua Gould\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global.OpenSeadragon = global.OpenSeadragon || {}, global.OpenSeadragon.CanvasOverlayHd = factory());\n}(this, (function () { 'use strict';\n\nclass CanvasOverlayHd {\n  constructor (viewer, options) {\n    this._viewer = viewer;\n    this.backingScale = 1;\n    this._containerWidth = 0;\n    this._containerHeight = 0;\n    this._canvasdiv = document.createElement('div');\n    this._canvasdiv.style.position = 'absolute';\n    this._canvasdiv.style.left = 0;\n    this._canvasdiv.style.top = 0;\n    this._canvasdiv.style.width = '100%';\n    this._canvasdiv.style.height = '100%';\n    this._viewer.canvas.appendChild(this._canvasdiv);\n    this._canvas = document.createElement('canvas');\n    this._canvasdiv.appendChild(this._canvas);\n    this.onRedraw = options.onRedraw || function () {};\n    this.clearBeforeRedraw = (typeof (options.clearBeforeRedraw) !== 'undefined') ?\n      options.clearBeforeRedraw : true;\n\n\n    //\n    // var that = this;\n    // this._viewer.world.addHandler('add-item', function(event) {\n    //       var tiledImage = event.item;\n    //       tiledImage.addHandler('fully-loaded-change', function(e) {\n    //         that.resize();\n    //         that._updateCanvas();\n    //       });\n    // });\n\n\n    this._viewer.addHandler('update-viewport', () => {\n      this.resize();\n      this._updateCanvas();\n    });\n    this._viewer.addHandler('open', () => {\n      this.resize();\n      this._updateCanvas();\n    });\n  }\n\n  static getTileIndexFromPixel (viewer, webPoint) {\n    let viewportPos = viewer.viewport.pointFromPixel(webPoint);\n    for (let i = 0, count = viewer.world.getItemCount(); i < count; i++) {\n      let tiledImage = viewer.world.getItemAt(i);\n      // box = viewer.world.getItemAt(i).getBounds();\n      // if (viewportPos.x > box.x &&\n      //   viewportPos.y > box.y &&\n      //   viewportPos.x < box.x + box.width &&\n      //   viewportPos.y < box.y + box.height) {\n      //\n      // }\n      // tiledImage.lastDrawn.forEach(function (tile) {\n      //   if (tile.bounds.containsPoint(viewportPos)) {\n      //     console.log('lastDrawn', tile);\n      //   }\n      // });\n\n      let viewportPosRect = new OpenSeadragon.Rect(viewportPos.x, viewportPos.y, 0, 0);\n      let tileSourcePosRect = tiledImage._viewportToTiledImageRectangle(viewportPosRect);\n      let tileSourcePos = tileSourcePosRect.getTopLeft();\n      let source = tiledImage.source;\n      if (tileSourcePos.x >= 0 && tileSourcePos.x <= 1 && tileSourcePos.y >= 0 &&\n        tileSourcePos.y <= 1 / source.aspectRatio) {\n        return i;\n        // for (let level = source.minLevel; level <= source.maxLevel; level++) {\n        //   let tilePoint = source.getTileAtPoint(level, tileSourcePos);\n        //   return i;\n        // }\n      }\n    }\n    return -1;\n  }\n\n  canvas () {\n    return this._canvas;\n  }\n\n  context2d () {\n    return this._canvas.getContext('2d');\n  }\n\n  clear () {\n    this._canvas.getContext('2d').\n      clearRect(0, 0, this._containerWidth * this.backingScale, this._containerHeight * this.backingScale);\n  }\n\n  resize () {\n    let backingScale = 1;\n    if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n      backingScale = window.devicePixelRatio;\n    }\n    let backingScaleUpdated = this.backingScale !== backingScale;\n    this.backingScale = backingScale;\n    if (this._containerWidth !== this._viewer.container.clientWidth || backingScaleUpdated) {\n      this._containerWidth = this._viewer.container.clientWidth;\n      this._canvasdiv.setAttribute('width', backingScale * this._containerWidth);\n      this._canvas.setAttribute('width', backingScale * this._containerWidth);\n      this._canvas.style.width = this._containerWidth + 'px';\n    }\n\n    if (this._containerHeight !== this._viewer.container.clientHeight || backingScaleUpdated) {\n      this._containerHeight = this._viewer.container.clientHeight;\n      this._canvasdiv.setAttribute('height', backingScale * this._containerHeight);\n      this._canvas.setAttribute('height', backingScale * this._containerHeight);\n      this._canvas.style.height = this._containerHeight + 'px';\n    }\n  }\n\n  _updateCanvas () {\n    let viewportZoom = this._viewer.viewport.getZoom(true);\n    if (this.clearBeforeRedraw) {\n      this.clear();\n    }\n    let context = this._canvas.getContext('2d');\n    for (let i = 0, count = this._viewer.world.getItemCount(); i < count; i++) {\n      let image = this._viewer.world.getItemAt(i);\n      if (image) {\n        let zoom = image.viewportToImageZoom(viewportZoom);\n        let vp = image.imageToViewportCoordinates(0, 0, true);\n        let p = this._viewer.viewport.pixelFromPoint(vp, true);\n        context.scale(this.backingScale, this.backingScale);\n        context.translate(p.x, p.y);\n        context.scale(zoom, zoom);\n        this.onRedraw({ index: i, context: context, x: p.x, y: p.y, zoom: zoom });\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      }\n    }\n  }\n}\n\nreturn CanvasOverlayHd;\n})));","!function(e){\"use strict\";function t(e){this.onCanvasHover(this.getValueAt(e.position))}if(!e.version||e.version.major<2)throw new Error(\"This version of OpenSeadragonRGB requires OpenSeadragon version 2.0.0+\");e.Viewer.prototype.rgb=function(t){return(!this.rgbInstance||t)&&(t=t||{},t.viewer=this,this.rgbInstance=new e.RGB(t)),this.rgbInstance},e.RGB=function(n){e.extend(!0,this,{viewer:null,onCanvasHover:null},n),this.onCanvasHover&&(this.tracker=new e.MouseTracker({element:this.viewer.canvas,moveHandler:e.delegate(this,t)}))},e.extend(e.RGB.prototype,e.ControlDock.prototype,{getValueAt:function(t,n){var r=1===arguments.length?t:new e.Point(t,n),o=this.viewer,i=o.drawer.getRgbAt(r);if(i)for(var a,s,g,v=0;v<o.world.getItemCount();v++)a=o.world.getItemAt(v),g=a.getContentSize(),s=e.TiledImage.prototype.viewerElementToImageCoordinates?a.viewerElementToImageCoordinates(r):o.viewport.viewerElementToImageCoordinates(r),s.x>=0&&s.y>=0&&s.x<=g.x&&s.y<=g.y&&(i.image=a,i.imageCoordinates=s);return i}}),e.Drawer.prototype.getRgbAt=function(t){if(!this.useCanvas)return!1;var n=e.pixelDensityRatio,r=this._getContext().getImageData(t.x*n,t.y*n,1,1).data;return{r:r[0],g:r[1],b:r[2],a:r[3]}}}(OpenSeadragon);\n//# sourceMappingURL=openseadragonrgb.js.map\n","import React from 'react';\nimport OpenSeadragonComponent from \"./OpenSeadragonComponent\";\nimport './index.css'\n\nfunction App() {\n    return (\n        <OpenSeadragonComponent/>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}